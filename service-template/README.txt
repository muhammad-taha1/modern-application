# service-template

## Service responsibility
**TODO**: Add a small description about the service


## Code architecture
This service follows the hexagonal code architecture, where domain logic needs to reside under *Domain* package, input and output ports under *Application* package and all infrastructure code (framework usage, calls to external services) should reside under *Infrastructure* package.

There is a unit test to ensure that the code architecture is respected. To learn more about hexagonal architecture, have a look [here](https://netflixtechblog.com/ready-for-changes-with-hexagonal-architecture-b315ec967749), and also look at how the starter demo code is implemented.



## How to run the service locally
In order to run this service locally, you need to install the following on your computer:
* Docker Desktop
* Java (uses version 17 atm)
* Maven

Start docker then simply run `docker-compose up` in the service's root folder. Once docker is up, you can run the service as a SpringBoot app from your IDE.

#### Stopping service
Once you are done with development, make sure to bring down all docker resources by running `docker-compose down`

## Extras
The service comes with Springboot actuator for monitoring, which can be accessed via http://localhost:8080/actuator locally.

Additionally, Swagger can be accessed via http://localhost:8080/api-docs-ui and `openAPI.yaml` specification can be downloaded from http://localhost:8080/api-docs.yaml

---
This project was autogenerated using **service template** provided with **modern-app** project.
